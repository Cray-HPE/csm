apiVersion: customizations/v1
metadata:
  name: stable
spec:
  network:
    nmn: ~FIXME~ e.g., 10.252.0.0/17
    nmn_load_balancers: ~FIXME~ e.g., 10.92.100.0/24
    hmn: ~FIXME~ e.g., 10.254.0.0/17
    hmn_load_balancers: ~FIXME~ e.g., 10.94.100.0/24
    high_speed: ~FIXME~ e.g., 10.253.0.0/16
    netstaticips:
      site_to_system_lookups: ~FIXME~
      system_to_site_lookups: ~FIXME~ e.g., 172.30.84.40
      nmn_tftp: ~FIXME~ e.g., 10.92.100.60
      hmn_tftp: ~FIXME~ e.g., 10.94.100.60
      nmn_api_gw: ~FIXME~ e.g., 10.92.100.71
      nmn_unbound: ~FIXME~ e.g., 10.92.100.74
      nmn_api_gw_local: ~FIXME~ e.g., 10.92.100.81
      hmn_api_gw: ~FIXME~ e.g., 10.94.100.71
      nmn_ncn_masters:
        - ~FIXME~ e.g., 10.252.1.10
        - ~FIXME~ e.g., 10.252.1.11
        - ~FIXME~ e.g., 10.252.1.12
      nmn_ncn_storage:
        - ~FIXME~ e.g., 10.252.1.4
        - ~FIXME~ e.g., 10.252.1.5
        - ~FIXME~ e.g., 10.252.1.6
    dns:
      external: ~FIXME~ e.g., eniac.dev.cray.com
      external_s3: ~FIXME~ e.g., s3.eniac.dev.cray.com
      external_auth: ~FIXME~ e.g., auth.eniac.dev.cray.com
      external_api: ~FIXME~ e.g., api.eniac.dev.cray.com
      internal_s3: ~FIXME~ e.g., rgw-vip.nmn
      internal_api: ~FIXME~ e.g., api-gw-service.nmn
  wlm:
    cluster_name: ~FIXME~ e.g., eniac
    wlmstaticips:
      slurmctld: ~FIXME~ e.g., 10.252.2.3
      slurmdbd: ~FIXME~ e.g., 10.252.2.4
      pbs: ~FIXME~ e.g., 10.252.2.5
      pbs_comm: ~FIXME~ e.g., 10.252.2.6
    macvlansetup:
      nmn_subnet: ~FIXME~ e.g., 10.252.2.0/23
      nmn_supernet: ~FIXME~ e.g., 10.252.0.0/17
      nmn_supernet_gateway: ~FIXME~ e.g., 10.252.0.1
      nmn_vlan: ~FIXME~ e.g., vlan002
      # NOTE: the term DHCP here is misleading, this is merely
      #       a range of reserved IPs for UAIs that should not
      #       be handed out to others becase the network
      #       attachment will hand them out to UAIs.
      nmn_dhcp_start: ~FIXME~ e.g., 10.252.2.10
      nmn_dhcp_end: ~FIXME~ e.g., 10.252.3.254
      # The following should be filled in by CSI generated routes to
      # to NMN subnets on which compute nodes reside.  These should
      # all be reached through the 'nmn_supernet_gateway' IP above.
      # If there is ever a local (i.e. 'nmn_supernet') route
      # destination in this list, it should be removed.
      routes: []
  kubernetes:
    # These are sealed secrets that HPE WILL overwrite during migrations.
    # Customer changes will be lost.
    tracked_sealed_secrets:
      - cray_reds_credentials
      - cray_meds_credentials
      - cray_hms_rts_credentials
    # NOTE: These are not automatically deployed to kubernetes, they are meant
    # to be included within the `services` section of different charts
    sealed_secrets:
      cray-keycloak:
        generate:
          name: keycloak-certs
          data:
            - type: static_b64
              args:
                name: certs.jks
                value: /u3+7QAAAAIAAAAA5yXvSDt11bGXyBA9M2iy0/5i1Tg=
      keycloak_master_admin_auth:
        generate:
          name: keycloak-master-admin-auth
          data:
            - type: static
              args:
                name: client-id
                value: admin-cli
            - type: static
              args:
                name: user
                value: admin
            - type: randstr
              args:
                name: password
                length: 32
            - type: static
              args:
                name: internal_token_url
                value: https://api-gw-service-nmn.local/keycloak/realms/master/protocol/openid-connect/token
      cray_reds_credentials:
        generate:
          name: cray-reds-credentials
          data:
            - type: static
              args:
                name: vault_redfish_defaults
                value: '{"Cray": {"Username": "root", "Password": "XXXX"}}'
            - type: static
              args:
                name: vault_switch_defaults
                value: '{"SNMPUsername": "testuser", "SNMPAuthPassword": "XXXX", "SNMPPrivPassword": "XXXX"}'
      cray_meds_credentials:
        generate:
          name: cray-meds-credentials
          data:
            - type: static
              args:
                name: vault_redfish_defaults
                value: '{"Username": "root", "Password": "XXXX"}'
      cray_hms_rts_credentials:
        generate:
          name: cray-hms-rts-credentials
          data:
            - type: static
              args:
                name: vault_pdu_defaults
                value: '{"Username": "admn", "Password": "XXXX"}'
            - type: static
              args:
                name: vault_rts_defaults
                value: '{"Username": "root", "Password": "XXXX"}'
      gitea:
        generate:
          name: vcs-user-credentials
          data:
            - type: randstr
              args:
                name: vcs_password
                length: 32
            - type: static
              args:
                name: vcs_username
                value: crayvcs
      gen_platform_ca_1:
        generate:
          name: generated-platform-ca-1
          data:
            - type: platform_ca
              args:
                root_days: 3651
                int_days: 3650
                root_cn: Platform CA
                int_cn: Platform CA - L1
      pals:
        generate:
          name: pals-config
          data:
            - type: zmq_curve
              args:
                pub_name: client_key.pub
                key_name: client_key
            - type: zmq_curve
              args:
                pub_name: server_key.pub
                key_name: server_key
      munge:
        generate:
          name: munge-secret
          data:
            - type: randstr
              args:
                name: munge.key
                length: 1024
      slurmdb:
        generate:
          name: slurmdb-secret
          data:
            - type: static
              args:
                name: MYSQL_USER
                value: slurm
            - type: static
              args:
                name: MYSQL_DATABASE
                value: slurm_acct_db
            - type: randstr
              args:
                name: MYSQL_ROOT_PASSWORD
                length: 32
            - type: randstr
              args:
                name: MYSQL_PASSWORD
                length: 32
      keycloak_users_localize:
        generate:
          name: keycloak-users-localize
          data:
            - type: static
              args:
                name: ldap_connection_url
                value: ""
    services:
      # Strive for readability. Keep services lexicographically sorted by chart
      # name. Seperate chart customizations by a blank line.
      cray-externaldns:
        coredns:
          zoneFiles:
            - contents: |
                # IP-address FQDN
                #10.1.2.3 ncn-w001.{{ network.dns.external }}
              filename: hosts
          servers:
            - zones:
                - use_tcp: true
                  zone: .
              port: "53"
              plugins:
                - name: errors
                - name: health
                - name: log
                - name: ready
                - name: kubernetes
                  parameters: cluster.local
                - name: k8s_external
                  parameters: internal.shasta
                - name: prometheus
                  parameters: 0.0.0.0:9153
                - configBlock: fallthrough
                  name: hosts
                  parameters: /etc/coredns/hosts
                - configBlock: |-
                    stubzones
                    path /skydns
                    endpoint http://cray-externaldns-etcd-client:2379
                  name: etcd
                  parameters: '{{ network.dns.external }}'
        sharedIPServices:
          customerAccess:
            loadBalancerIP: '{{ network.netstaticips.site_to_system_lookups }}'
      cray-hms-badger-loader:
        nexus:
          repo: badger
      cray-hms-firmware-action:
        nexus:
          repo: shasta-firmware
      cray-hms-hmcollector:
        hmcollector_external_ip: '{{ network.netstaticips.hmn_api_gw }}'
      cray-hms-meds:
        ntpserver_host: time-hmn:123
        ntpserver_host_use_ip: ""
        syslogserver_host: rsyslog-aggregator.hmnlb:514
        syslogserver_host_use_ip: "y"
        # Default root SSH key to nothing, will cause MEDS to ignore it.
        vault_root_ssh_key: ""
        cray-service:
          sealedSecrets:
            - '{{ kubernetes.sealed_secrets.cray_meds_credentials | toYaml }}'
      cray-hms-rts:
        cray-service:
          sealedSecrets:
            - '{{ kubernetes.sealed_secrets.cray_hms_rts_credentials | toYaml }}'
      cray-ims:
        keycloak:
          keycloak_admin_client_auth_secret_name: admin-client-auth
        customer_access:
          access_pool: customer-access
          shasta_domain: '{{ network.dns.external }}'
        api_gw:
          api_gw_service_name: istio-ingressgateway
          api_gw_service_namespace: istio-system
      cray-istio-deploy:
        istio:
          kiali:
            dashboard:
              grafanaURL: https://{{ kubernetes.services['cray-istio'].istio.grafana.externalAuthority }}/
              jaegerURL: https://{{ kubernetes.services['cray-istio'].istio.tracing.externalAuthority }}/
      cray-istio:
        # Override for the ingress-gateway certificate (requested from
        # cert-manager). The list of master nodes must be reviewed and
        # updated per system until a source exists from which to dynamically
        # source them.
        certificate:
          dnsNames:
            - ncn-m001.local
            - ncn-m002.local
            - ncn-m003.local
            - registry.local
            - packages.local
            - api_gw_service.local
            - api_gw_service-nmn.local
            - api-gw-service.local
            - api-gw-service-nmn.local
            - istio-ingressgateway.istio-system.svc.cluster.local
            - '*.{{ network.dns.external }}'
          commonName: '{{ network.dns.external }}'
        extraIngressServices:
          cmn:
            enabled: true
          can:
            enabled: true
            annotations:
              external-dns.alpha.kubernetes.io/hostname: '{{ network.dns.external_api }},{{ network.dns.external_auth }}'
        authn:
          enabled: true
        servicesGateway:
          tls: true
          redirect: true
        istio:
          tracing:
            externalAuthority: jaeger-istio.{{ network.dns.external }}
          prometheus:
            externalAuthority: prometheus-istio.{{ network.dns.external }}
            resources:
              requests:
                cpu: "1"
                memory: 4.5Gi
              limits:
                cpu: "3"
                memory: 7Gi
          grafana:
            enabled: false
            externalAuthority: grafana-istio.{{ network.dns.external }}
          kiali:
            externalAuthority: kiali-istio.{{ network.dns.external }}
            dashboard:
              grafanaURL: https://{{ kubernetes.services['cray-istio'].istio.grafana.externalAuthority }}/
              jaegerURL: https://{{ kubernetes.services['cray-istio'].istio.tracing.externalAuthority }}/
              prometheusURL: https://{{ kubernetes.services['cray-istio'].istio.prometheus.externalAuthority }}/
          gateways:
            istio-ingressgateway:
              loadBalancerIP: '{{ network.netstaticips.nmn_api_gw }}'
              localLoadBalancerIP: '{{ network.netstaticips.nmn_api_gw_local }}'
              type: LoadBalancer
        ingressgatewayhmn:
          gateways:
            istio-ingressgateway-hmn:
              type: LoadBalancer
              loadBalancerIP: '{{ network.netstaticips.hmn_api_gw }}'
              enabled: true
      cray-keycloak:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets[''cray-keycloak''] | toYaml }}'
          - '{{ kubernetes.sealed_secrets.keycloak_master_admin_auth | toYaml }}'
        setup:
          keycloak:
            customerAccessUrl: https://{{ network.dns.external_auth }}/keycloak
            gatekeeper:
              proxiedHosts: '{{ kubernetes.services[''cray-keycloak-gatekeeper''].hosts | list }}'
            service: keycloak.services
            clusterGw:
              route: /keycloak
              dnsName: '{{ network.dns.internal_api }}'
        internalTokenUrl: https://{{ network.dns.internal_api }}/keycloak/realms/master/protocol/openid-connect/token
      cray-keycloak-gatekeeper:
        hostAliases:
          - ip: '{{ network.netstaticips.nmn_api_gw }}'
            hostnames:
              - '{{ network.dns.external_auth }}'
        hosts:
          - '{{ kubernetes.services[''gatekeeper-policy-manager''][''gatekeeper-policy-manager''].externalAuthority }}'
          - '{{ kubernetes.services[''cray-nexus''].istio.ingress.hosts.ui.authority }}'
          - '{{ kubernetes.services[''cray-istio''].istio.grafana.externalAuthority }}'
          - '{{ kubernetes.services[''cray-istio''].istio.tracing.externalAuthority }}'
          - '{{ kubernetes.services[''cray-istio''].istio.prometheus.externalAuthority }}'
          - '{{ kubernetes.services[''cray-istio''].istio.kiali.externalAuthority }}'
          - '{{ kubernetes.services[''cray-sysmgmt-health''][''prometheus-operator''].prometheus.prometheusSpec.externalAuthority }}'
          - '{{ kubernetes.services[''cray-sysmgmt-health''][''prometheus-operator''].alertmanager.alertmanagerSpec.externalAuthority }}'
          - '{{ kubernetes.services[''cray-sysmgmt-health''][''prometheus-operator''].grafana.externalAuthority }}'
          - '{{ kubernetes.services.gitea.externalHostname }}'
          - sma-grafana.{{ network.dns.external }}
          - sma-kibana.{{network.dns.external}}
          - mma.{{ network.dns.external }}
      cray-munge:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets.munge | toYaml }}'
      cray-munge-services:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets.munge | toYaml }}'
      cray-nexus:
        istio:
          ingress:
            hosts:
              ui:
                enabled: true
                authority: nexus.{{ network.dns.external }}
      cray-node-discovery:
        networks:
          node_management:
            blocks:
              ipv4:
                - label: river
                  network: '{{ network.nmn }}'
          hardware_management:
            blocks:
              ipv4:
                - label: river
                  network: '{{ network.hmn }}'
      cray-sssd:
        domains:
          - name: Cray_DC
            ldapSchema: rfc2307
            ldapURI: ldaps://dcldap2.us.cray.com,ldaps://dcldap3.us.cray.com
            ldapSearchBase: dc=dcldap,dc=dit
            ldapTLSReqcert: allow
      cray-slurmdbd:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets.slurmdb | toYaml }}'
        slurmdbd:
          ip: '{{ wlm.wlmstaticips.slurmdbd }}'
        macvlan:
          subnet: '{{ wlm.macvlansetup.nmn_supernet }}'
          routes: '{{ wlm.macvlansetup.routes }}'
      cray-slurmctld:
        clusterName: '{{ wlm.cluster_name }}'
        macvlan:
          ip: '{{ wlm.wlmstaticips.slurmctld }}'
          subnet: '{{ wlm.macvlansetup.nmn_supernet }}'
          routes: '{{ wlm.macvlansetup.routes }}'
      slurm-config:
        cluster_name: '{{ wlm.cluster_name }}'
        slurmctld_ip: '{{ wlm.wlmstaticips.slurmctld }}'
        slurmdbd_ip: '{{ wlm.wlmstaticips.slurmdbd }}'
      cray-sysmgmt-health:
        prometheus-operator:
          kubeEtcd:
            endpoints: '{{ network.netstaticips.nmn_ncn_masters }}'
          prometheus:
            prometheusSpec:
              externalAuthority: prometheus.{{ network.dns.external }}
              externalUrl: https://{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].prometheus.prometheusSpec.externalAuthority }}/
          alertmanager:
            alertmanagerSpec:
              externalAuthority: alertmanager.{{ network.dns.external }}
              externalUrl: https://{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].alertmanager.alertmanagerSpec.externalAuthority }}/
          grafana:
            externalAuthority: grafana.{{ network.dns.external }}
            # Skip plugin installation for airgaped systems.
            # If the system is non airgaped then you can comment out or remove plugins property.
            plugins: ""
        cephExporter:
          endpoints: '{{ network.netstaticips.nmn_ncn_storage }}'
        cephNodeExporter:
          endpoints: '{{ network.netstaticips.nmn_ncn_storage }}'
          enabled: true
      cray-hms-reds:
        cray-service:
          sealedSecrets:
            - '{{ kubernetes.sealed_secrets.cray_reds_credentials | toYaml }}'
      cray-rm-pals:
        cray-service:
          sealedSecrets:
            - '{{ kubernetes.sealed_secrets.pals | toYaml }}'
      cray-s3:
        service:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: '{{ network.dns.external_s3 }}'
        rgw:
          ips: '{{ network.netstaticips.nmn_ncn_storage }}'
      cray-tftp:
        storage_shared_class_cray_tftp: ceph-cephfs-external
        storage_shared_size_cray_tftp: 5Gi
        nmn_tftp_service_ip: '{{ network.netstaticips.nmn_tftp }}'
        hmn_tftp_service_ip: '{{ network.netstaticips.hmn_tftp }}'
      cray-uas-mgr:
        uasConfig:
          uai_macvlan_interface: '{{ wlm.macvlansetup.nmn_vlan }}'
          uai_macvlan_network: '{{ wlm.macvlansetup.nmn_supernet }}'
          uai_macvlan_range_start: '{{ wlm.macvlansetup.nmn_reservation_start }}'
          uai_macvlan_range_end: '{{ wlm.macvlansetup.nmn_reservation_end }}'
          uai_macvlan_routes: '{{ wlm.macvlansetup.routes }}'
          uas_ssh_lb_pool: customer-access
          images:
            images:
              - cray/cray-uai-sles15sp1:latest
            defaultImage: cray/cray-uai-sles15sp1:latest
      cray-vault:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets.gen_platform_ca_1 | toYaml }}'
        pki:
          customCA:
            enabled: true
            secret: generated-platform-ca-1
            private_key: int_ca.key
            certificate: int_ca.crt
            ca_bundle: root_ca.crt
      gitea:
        uriPrefix: /vcs
        externalHostname: vcs.{{ network.dns.external }}
        cray-service:
          sqlCluster:
            volumeSize: 50Gi
            instanceCount: 3
            enabled: true
            users:
              service_account: []
            databases:
              service_db: service_account
          sealedSecrets:
            - '{{ kubernetes.sealed_secrets.gitea | toYaml }}'
      capsules-warehouse-server:
        config:
          server:
            authJwksUrl: http://cray-keycloak-http.services.svc.cluster.local/keycloak/realms/shasta/protocol/openid-connect/certs
      capsules-dispatch-server:
        config:
          server:
            authJwksUrl: http://cray-keycloak-http.services.svc.cluster.local/keycloak/realms/shasta/protocol/openid-connect/certs
      sma-zk-kafka:
        kafkaPVCSize: 65Gi
        zkPVCSize: 1Gi
        storageClass: sma-block-replicated
        kafkaReqCPU: "5"
        kafkaReqMem: 6Gi
        javaMinHeapSize: 5g
      sma-postgres-cluster:
        pgReqMem: 4Gi
        pgReqCPU: "2"
        volume:
          size: 1.6Ti
          storageClass: sma-block-replicated
      sma-pgdb-cron:
        pg_retention_duration: 7
        pg_action_decimal: 0.94
        pg_safemax_decimal: 0.89
      sma-mariadb:
        mysqlPVC:
          storage: 5Gi
          storageClass: sma-block-replicated
      sma-elasticsearch:
        esJavaOpts: -Xmx30g -Xms30g
        resources:
          requests:
            cpu: "4"
            memory: 16Gi
        volumeClaimTemplate:
          storageClassName: sma-block-replicated
          resources:
            requests:
              storage: 188Gi
      sma-es-curator:
        es_max_index_age: 7
        es_disk_highwater: 95
        es_disk_lowwater: 90
        es_disk_minimum_indices: 3
      sma-rsyslog-aggregator:
        replicaCount: 3
        cray-service:
          service:
            loadBalancerIP: 10.92.100.72
          volumeClaimTemplate:
            storageClassName: sma-block-replicated
            resources:
              requests:
                storage: 16Gi
        rsyslogAggregatorCan:
          externalHostname: rsyslog.{{ network.dns.external }}
        rsyslogAggregatorHmn:
          service:
            loadBalancerIP: 10.94.100.2
      sma-rsyslog-aggregator-udp:
        replicaCount: 3
        cray-service:
          service:
            loadBalancerIP: 10.92.100.75
          volumeClaimTemplate:
            storageClassName: sma-block-replicated
            resources:
              requests:
                storage: 16Gi
        rsyslogAggregatorCan:
          externalHostname: rsyslog-udp.{{ network.dns.external }}
        rsyslogAggregatorUdpHmn:
          service:
            loadBalancerIP: 10.94.100.3
      sma-kibana:
        externalAuthority: sma-kibana.{{ network.dns.external }}
        cray-service:
          containers:
            sma-kibana:
              resources:
                requests:
                  cpu: "1"
                  memory: 2Gi
      sma-grafana:
        externalAuthority: sma-grafana.{{ network.dns.external }}
        cray-service:
          containers:
            sma-grafana:
              resources:
                requests:
                  cpu: "1"
                  memory: 2Gi
      sma-monasca:
        mysql:
          persistence:
            storageClass: sma-block-replicated
            size: 5Gi
      sma-ldms-config:
        pvcs:
          ldmsComputeAggrPVC:
            storageClass: ceph-cephfs-external
          ldmsComputeSmplPVC:
            storageClass: ceph-cephfs-external
          ldmsSmsAggrPvc:
            storageClass: ceph-cephfs-external
          ldmsSmsSmplPVC:
            storageClass: ceph-cephfs-external
          ldmsSmplPVC:
            storageClass: ceph-cephfs-external
        no_ncn_storage_flag: true
      cray-pbs:
        pbs:
          ip: '{{ wlm.wlmstaticips.pbs }}'
        comm:
          ip: '{{ wlm.wlmstaticips.pbs_comm }}'
        macvlan:
          subnet: '{{ wlm.macvlansetup.nmn_supernet }}'
          routes: '{{ wlm.macvlansetup.routes }}'
        #
        # Node label(s) take the form:
        #
        # - <node>:<key>=<value>:<key2>=<value2>...
        #
        nodeLabels:
          - ncn-m001:no_external_access=False
          - ncn-m002:no_external_access=True
          - ncn-m003:no_external_access=True
          - ncn-w001:no_external_access=False
          - ncn-w002:no_external_access=False
          - ncn-w003:no_external_access=False
      cray-opa:
        jwtValidation:
          keycloak:
            issuers:
              shasta: https://{{ network.dns.external_api }}/keycloak/realms/shasta
              keycloak: https://{{ network.dns.external_auth }}/keycloak/realms/shasta
      spire:
        trustDomain: shasta
        server:
          fqdn: spire.local
      cray-keycloak-users-localize:
        sealedSecrets:
          - '{{ kubernetes.sealed_secrets.keycloak_users_localize | toYaml }}'
      cray-hms-bss:
        addvertisAddress: http://{{ network.netstaticips.nmn_api_gw_local }}:8888
      gatekeeper-policy-manager:
        gatekeeper-policy-manager:
          externalAuthority: opa-gpm.{{ network.dns.external }}
          externalUrl: https://{{ kubernetes.services['gatekeeper-policy-manager']['gatekeeper-policy-manager'].externalAuthority }}/
